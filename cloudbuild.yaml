steps:
  # Step 1: Install frontend dependencies
  - name: 'gcr.io/cloud-builders/npm'
    id: 'npm-install'
    args: ['install']
    dir: 'frontend'

  # Step 2: Build the static frontend
  - name: 'gcr.io/cloud-builders/npm'
    id: 'build-frontend'
    args: ['run', 'build']
    dir: 'frontend'
    waitFor: ['npm-install']

  # Step 3: Build the backend Docker image
  # The image is tagged with the commit SHA for versioning
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-backend-image'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/${PROJECT_ID}/cdms-repo/cdms-backend:${SHORT_SHA}'
      - '.'
      - '-f'
      - 'Dockerfile'
    dir: 'backend'

  # Step 4: Push the backend image to Google Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-backend-image'
    args: ['push', 'us-central1-docker.pkg.dev/${PROJECT_ID}/cdms-repo/cdms-backend:${SHORT_SHA}']
    waitFor: ['build-backend-image']

  # Step 5: Run DB Migratios
  - name: 'golang:1.22-alpine'
    id:   'run-db-migrations'
    entrypoint: 'sh'

    waitFor: ['push-backend-image']
    args:
      - '-c'
      - |
        # Download and run the Cloud SQL Auth Proxy
        wget https://storage.googleapis.com/cloud-sql-connectors/cloud-sql-proxy/v2.10.1/cloud-sql-proxy.linux.amd64 -O /usr/local/bin/cloud-sql-proxy
        chmod +x /usr/local/bin/cloud-sql-proxy
        # Start the proxy in the background
        /usr/local/bin/cloud-sql-proxy --quiet --private-ip YOUR_INSTANCE_CONNECTION_NAME &
        # Give the proxy a second to start
        sleep 2

        # Install goose
        go install github.com/pressly/goose/v3/cmd/goose@latest

        # Run the migrations
        # The DATABASE_URL is securely accessed from Secret Manager
        # The host is '127.0.0.1' because we're connecting through the proxy
        DB_URL=$(gcloud secrets versions access latest --secret=cdms-database-url --project=${PROJECT_ID})
        goose -dir "backend/sql/schema" postgres "$${DB_URL//cloudsql*/127.0.0.1}" up

  # Step 6: Deploy the new image to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-backend'
    args:
      - 'run'
      - 'deploy'
      - 'cdms-backend'
      - '--image=us-central1-docker.pkg.dev/${PROJECT_ID}/cdms-repo/cdms-backend:${SHORT_SHA}'
      - '--region=us-central1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--port=8080'
      - '--update-secrets=DATABASE_URL=cdms-database-url:latest,SENTRY_DSN=cdms-sentry-dsn:latest'
      - '--set-env-vars=GCS_BUCKET_NAME=your-cdms-report-bucket-name'
    waitFor: ['push-backend-image']

# Store the final image URI for reference
images:
  - 'us-central1-docker.pkg.dev/${PROJECT_ID}/cdms-repo/cdms-backend:${SHORT_SHA}'

options:
  logging: CLOUD_LOGGING_ONLY
