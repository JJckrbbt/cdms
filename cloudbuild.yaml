options:
  pool:
    name: 'projects/cdms-463617/locations/us-central1/workerPools/cdms'

steps:
  # Steps 1-5 build the frontend, deploy it, and build the backend image
  - name: 'gcr.io/cloud-builders/npm'
    id: 'npm-install'
    args: ['install']
    dir: 'frontend'
  - name: 'gcr.io/cloud-builders/npm'
    id: 'build-frontend'
    args: ['run', 'build']
    dir: 'frontend'
    waitFor: ['npm-install']
  - name: 'gcr.io/cloud-builders/gsutil'
    id: 'deploy-frontend'
    args: ['-m', 'rsync', '-r', '-c', '-d', './dist', 'gs://cdms.jjckrbbt.dev']
    dir: 'frontend'
    waitFor: ['build-frontend']
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-backend-image'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/${PROJECT_ID}/cdms-repo/cdms-backend:${SHORT_SHA}', '.', '-f', 'Dockerfile']
    dir: 'backend'
    waitFor: ['build-frontend']
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-backend-image'
    args: ['push', 'us-central1-docker.pkg.dev/${PROJECT_ID}/cdms-repo/cdms-backend:${SHORT_SHA}']
    waitFor: ['build-backend-image']
  
  # Step 6: Build the dedicated migrator image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-migrator'
    args: ['build', '-t', 'gcr.io/${PROJECT_ID}/migrator:latest', '.', '-f', 'Dockerfile.migrate']
    dir: 'backend'

# Step 7: Run DB Migrations
  - name: 'gcr.io/${PROJECT_ID}/migrator:latest'
    id: 'run-db-migrations'
    waitFor: ['build-migrator']
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        # THE DEFINITIVE COMMAND:
        # 1. Use --private-ip to tell the proxy to connect to your DB's private IP.
        # 2. Use --unix-socket to create the socket file that goose needs to connect.
        /usr/local/bin/cloud_sql_proxy --private-ip --unix-socket /cloudsql cdms-463617:us-central1:cdms &
        
        # Wait 10 seconds for the proxy to establish the connection.
        sleep 10
        
        # Now, goose will connect successfully.
        /go/bin/goose -dir "backend/sql/schema" postgres "$$DB_SECRET" up
    secretEnv: ['DB_SECRET']

  # Step 8: Deploy the application
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-backend'
    args:
      - 'run'
      - 'deploy'
      - 'cdms-backend'
      - '--image=us-central1-docker.pkg.dev/${PROJECT_ID}/cdms-repo/cdms-backend:${SHORT_SHA}'
      - '--region=us-central1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--port=8080'
      - '--cpu-boost'
      - '--add-cloudsql-instances=cdms-463617:us-central1:cdms'
      - '--set-secrets=DATABASE_URL=cdms-database-url:latest,SENTRY_DSN=cdms-sentry-dsn:latest'
      - '--set-env-vars=GCS_BUCKET_NAME=cdms.jjckrbbt.dev'
    waitFor: ['run-db-migrations']

availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/cdms-database-url/versions/latest
    env: 'DB_SECRET'

images:
  - 'us-central1-docker.pkg.dev/${PROJECT_ID}/cdms-repo/cdms-backend:${SHORT_SHA}'

options:
  logging: CLOUD_LOGGING_ONLY
