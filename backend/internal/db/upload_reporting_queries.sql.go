// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: upload_reporting_queries.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getRemovedRowsByUploadID = `-- name: GetRemovedRowsByUploadID :many
SELECT id, upload_id, timestamp, report_type, original_row_data, reason_for_removal FROM removed_rows_log
WHERE upload_id = $1
ORDER BY timestamp DESC
`

// Fetches all rows removed by processing of a particular upload
// most recent first
func (q *Queries) GetRemovedRowsByUploadID(ctx context.Context, uploadID pgtype.UUID) ([]RemovedRowsLog, error) {
	rows, err := q.db.Query(ctx, getRemovedRowsByUploadID, uploadID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []RemovedRowsLog
	for rows.Next() {
		var i RemovedRowsLog
		if err := rows.Scan(
			&i.ID,
			&i.UploadID,
			&i.Timestamp,
			&i.ReportType,
			&i.OriginalRowData,
			&i.ReasonForRemoval,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
